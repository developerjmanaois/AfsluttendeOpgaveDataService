import React, { useState, useEffect } from 'react';
import useRequestData from '../../hooks/useRequestData';
import Loader from '../../components/Loader';
import Error from '../../components/Error';

const EnergyPrices = () => {
  const { makeRequest, isLoading, error, data } = useRequestData();

  const [startDate, setStartDate] = useState('');
  const [endDate, setEndDate] = useState('');
  const [selectedPriceArea, setSelectedPriceArea] = useState('dk2');

  const handleCalculation = () => {
    if (!startDate || !endDate || !selectedPriceArea) {
      // Handle the case where either date or price area is not selected
      return;
    }

    const filters = { PriceArea: [selectedPriceArea] };
    const formattedStartDate = `${startDate}T00:00`;
    const formattedEndDate = `${endDate}T23:59`;

    let endpoint = '';

    if (selectedPriceArea.toLowerCase() === 'dk1') {
      endpoint = `https://api.energidataservice.dk/dataset/Elspotprices?offset=0&start=${formattedStartDate}&end=${formattedEndDate}&filter=${encodeURIComponent(
        JSON.stringify(filters)
      )}&sort=SpotPriceDKK%20DESC`;
    } else if (selectedPriceArea.toLowerCase() === 'dk2') {
      endpoint = `https://api.energidataservice.dk/dataset/Elspotprices?offset=0&start=${formattedStartDate}&end=${formattedEndDate}&filter=${encodeURIComponent(
        JSON.stringify(filters)
      )}&sort=SpotPriceDKK%20DESC`;
    }

    makeRequest(endpoint, 'GET', {
      'Content-Type': 'application/json',
      // Add any other headers as needed
    });
  };

  useEffect(() => {
    // Load default data or initial data when the component mounts
    handleCalculation();
  }, []); // You might want to load data based on default filters

  return (
    <div>
      <h1 className='mb-6 text-3xl font-bold text-center'>Energy Prices</h1>

      <div className='my-4'>
        <p>
          <small>Data from your energy prices API</small>
        </p>
      </div>

      <div>
        <label>Start Date:</label>
        <input
          type='date'
          value={startDate}
          onChange={(e) => setStartDate(e.target.value)}
          className='input input-bordered w-200 max-w-xs mr-3'
        />

        <label>End Date:</label>
        <input
          type='date'
          value={endDate}
          onChange={(e) => setEndDate(e.target.value)}
          className='input input-bordered w-200 max-w-xs mr-3'
        />

        <select
          value={selectedPriceArea}
          onChange={(e) => setSelectedPriceArea(e.target.value)}
          className='input input-bordered w-200 max-w-xs'
        >
          <option value='dk1'>DK1</option>
          <option value='dk2'>DK2</option>
          {/* Add other price areas if needed */}
        </select>

        <button onClick={handleCalculation} className='btn btn-active btn-secondary ml-3'>
          &#128176; Calculate
        </button>
      </div>

      {isLoading && <Loader />}
      {error && <Error />}

      {data && (
        <div className='card w-96 bg-base-100 shadow-xl mt-6'>
          {data.records.map((record) => (
            <article className='card-body' key={record.HourDK}>
              <h2 className='card-title'>{record.HourDK}</h2>
              <p>Price Area: {record.PriceArea}</p>
              <p>Spot Price DKK: {record.SpotPriceDKK}</p>
              <p>Spot Price EUR: {record.SpotPriceEUR}</p>
            </article>
          ))}
        </div>
      )}
    </div>
  );
};

export default EnergyPrices;


