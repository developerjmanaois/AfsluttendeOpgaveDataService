import React, { useState, useEffect, useRef } from 'react';
import useRequestData from '../../hooks/useRequestData';
import Loader from '../../components/Loader';
import Error from '../../components/Error';
import { gsap } from 'gsap';
import { Chart, LinearScale, ScatterController, LineElement, PointElement, CategoryScale, Title } from 'chart.js/auto';

const Graph = () => {
  const { makeRequest, isLoading, error, data } = useRequestData();

  const [startDate, setStartDate] = useState('');
  const [endDate, setEndDate] = useState('');
  const [selectedPriceArea, setSelectedPriceArea] = useState('dk2');

  const handleCalculation = () => {
    if (!startDate || !endDate || !selectedPriceArea) {
      return;
    }

    const filters = { PriceArea: [selectedPriceArea] };
    const formattedStartDate = `${startDate}T00:00`;
    const formattedEndDate = `${endDate}T23:59`;

    let endpoint = "https://api.energidataservice.dk/dataset/Elspotprices?offset=0&start=" + formattedStartDate + "&end=" + formattedEndDate + "&filter=" + encodeURIComponent(
      JSON.stringify(filters)
    ) + "&sort=HourDK";

    makeRequest(endpoint, 'GET', {
      'Content-Type': 'application/json',
    });
  };

  useEffect(() => {
    handleCalculation();
  }, []);


  return (
    // <div>
    //   {/* ... your existing JSX ... */}
    //   <canvas id="energyChart" width="400" height="200"></canvas>
    // </div>

    <div>
      <h1 className='my-6 text-3xl font-bold text-center'>Energy Prices</h1>

      <div className='my-4 px-10'>
        <h3>
          <small>Data from your energy prices API:</small>
        </h3>
      </div>

      <div className='flex items center px-10 pb-20'>
        <div className='grid'>
          <label>Start Date:</label>
          <input
            type='date'
            value={startDate}
            onChange={(e) => setStartDate(e.target.value)}
            className='input input-bordered w-200 max-w-xs mr-3'
          />
        </div>

        <div className='grid'>
          <label>End Date:</label>
          <input
            type='date'
            value={endDate}
            onChange={(e) => setEndDate(e.target.value)}
            className='input input-bordered w-200 max-w-xs mr-3'
          />
        </div>

        <div className='grid'>
          <label>Price Area</label>
          <select
            value={selectedPriceArea}
            onChange={(e) => setSelectedPriceArea(e.target.value)}
            className='input input-bordered w-200 max-w-xs'
          >
            <option value='dk1'>DK1</option>
            <option value='dk2'>DK2</option>
            {/* Add other price areas if needed */}
          </select>
        </div>

        <div className='flex items-end'>
          <button onClick={handleCalculation} className='btn btn-active btn-secondary ml-3'>
          &#128176; Show
          </button>
        </div>
      </div>

      {isLoading && <Loader />}
      {error && <Error />}

      
      {data && (
  <div className='grid grid-cols-4 gap-4'>
    {data.records.map((record) => (
      <div className='card w-96 bg-base-100 shadow-xl mt-6' key={record.HourDK}>
        <article className='card-body'>
          <h2 className='card-title'>{record.HourDK}</h2>
          <p>Price Area: {record.PriceArea}</p>
          <p>Spot Price DKK: {record.SpotPriceDKK}</p>
          <p>Spot Price EUR: {record.SpotPriceEUR}</p>
        </article>
      </div>
    ))}
  </div>
)}
      

    </div>
  );
};

export default Graph;
